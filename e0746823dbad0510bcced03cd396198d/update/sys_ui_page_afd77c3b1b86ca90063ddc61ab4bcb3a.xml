<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script/>
        <description/>
        <direct>false</direct>
        <endpoint>x_snc_datasanity_manual.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
<div style="padding-left: 20px;">
<span style="visibility: hidden;">_CUT_HERE_</span>
	<g2:no_escape>$[
		var docapi = new x_snc_devtools.DocumentationAPI('x_snc_datasanity');
		docapi.RenderHeader();
	]</g2:no_escape>
	
	<p>Welcome to DataSanity - created and maintained by&#160;<a href="mailto:sascha.wildgrube@servicenow.com">Sascha Wildgrube</a>.</p>

	<h2>Overview</h2> 
	<g2:no_escape>$[
		docapi.RenderDescription();
	]</g2:no_escape>
	
	<h2>Features</h2> 
	<p>The DataSanity app contains Instance Scan checks that validate data records. The checks are aimed to reveal data problems, inconsistencies and invalid records.</p>
	<p>The checks also enforce the application of the persona role concept, described in the whitepaper&#160;<a href="https://www.wildgrube.com/download/A%20mature%20Development%20and%20Deployment%20Process.pdf" target="_blank">A mature Development and Deployment Process - How to sleep well when your 200 developers deploy apps every day</a>.</p>
	<p>Results should be reviewed on a regular basis and countermeasures should be taken. Bad data leads to incorrect reports, bad decisions and unnecessary work.</p>

	<h2>Disclaimer</h2>
	<g2:no_escape>$[docapi.RenderDisclaimer()]</g2:no_escape>	
	
	<h2>System Requirements</h2>
	<ul>
		<g2:no_escape>$[
			docapi.RenderSystemRequirements(
				'Vancouver,Washington',
				true,
				AppGetDependencies());
		]</g2:no_escape>	
	</ul>
	
	<h2>Installation</h2>
	<ol>
		<g2:no_escape>$[
			docapi.RenderInstallationInstructionsImportFromSourceControl(
				'DevTools',
				'https://github.com/saschawildgrube/servicenow-devtools',
				true,
				'https://www.wildgrube.com/servicenow-devtools/');
		]</g2:no_escape>
		<g2:no_escape>$[
			docapi.RenderInstallationInstructionsImportFromSourceControl(
				'DataSanity',
				'https://www.wildgrube.com/servicenow-datasanity/');
		]</g2:no_escape>		
		<g2:no_escape>$[
			docapi.RenderInstallationInstructionsAppInstall();
		]</g2:no_escape>		
	</ol>
	
	<h2>Instance Scan checks contained in the DataSanity app</h2>
	<g2:no_escape>$[docapi.RenderInstanceScanChecks()]</g2:no_escape>	

	<h2>Reference</h2>

	<h3>Configuration Options</h3>
	<g2:no_escape>$[docapi.RenderProperties()]</g2:no_escape>
	
	<h3>Roles</h3>
	<g2:no_escape>$[docapi.RenderRoles()]</g2:no_escape>		

<!--
	<h3>UI Actions</h3>
	<g2:no_escape>$[docapi.RenderUIActions()]</g2:no_escape>		
-->	
	<h3>Script Includes</h3>
	<g2:no_escape>$[docapi.RenderScriptIncludes()]</g2:no_escape>
<!--	
	<h3>UI Scripts</h3>
	<g2:no_escape>$[docapi.RenderUIScripts()]</g2:no_escape>	

	<h3>REST APIs</h3>
	<g2:no_escape>$[docapi.RenderRestApis()]</g2:no_escape>		
	
	<h3>Test step configurations</h3>
	<g2:no_escape>$[docapi.RenderTestStepConfigurations()]</g2:no_escape>

	<h3>Extension Points</h3>
	<g2:no_escape>$[docapi.RenderExtensionPoints()]</g2:no_escape>		

	<h3>Business Rules</h3>
	<g2:no_escape>$[docapi.RenderBusinessRules()]</g2:no_escape>	
-->

	<h2>License</h2>
	<g2:no_escape>$[docapi.RenderCopyright(2024,'Sascha Wildgrube')]</g2:no_escape>
	<g2:no_escape>$[docapi.RenderLicense()]</g2:no_escape>
	
	<h2>Release Notes</h2>

	<h3>1.1.0 - TODO</h3>
	<ol>
		<li>DevTools 1.87.0 is now required.</li>
		<li>Added check "DataSanity - Scheduled Jobs run by technical users".</li>
		<li>The check "DataSanity - Groups with non-persona roles" now allows the admin and security_admin roles to be assigned to groups directly.</li>
	</ol>


	<h3>1.0.1 - 2024-05-26</h3>
	<ol>
		<li>Check "DataSanity - Users without user name (User ID)" only considers users in sys_user (and ignores extended tables like customer_contact).</li>
		<li>Check "DataSanity - Roles assigned directly to users" now ignores the roles snc_internal and snc_external (which are introduced by the "Explicit Roles" plugin) as these roles are directly assigned to users automatically.</li>
		<li>Improved ATF test for check "DataSanity - Groups with non-persona roles" by setting the scope of the test data role.</li>
	</ol>


	<h3>1.0.0 - 2024-05-17</h3>
	<p>First baselined version</p>

<span style="visibility: hidden;">_CUT_HERE_</span>
</div>
</j:jelly>]]></html>
        <name>manual</name>
        <processing_script/>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-05-15 10:14:34</sys_created_on>
        <sys_id>afd77c3b1b86ca90063ddc61ab4bcb3a</sys_id>
        <sys_mod_count>13</sys_mod_count>
        <sys_name>manual</sys_name>
        <sys_package display_value="DataSanity WORK IN PROGRESS" source="x_snc_datasanity">e0746823dbad0510bcced03cd396198d</sys_package>
        <sys_policy/>
        <sys_scope display_value="DataSanity WORK IN PROGRESS">e0746823dbad0510bcced03cd396198d</sys_scope>
        <sys_update_name>sys_ui_page_afd77c3b1b86ca90063ddc61ab4bcb3a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-06-04 09:48:29</sys_updated_on>
    </sys_ui_page>
</record_update>
